@model PagedList.IPagedList<WebSales.Models.Product.ProductIndexView>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    var isValidAdmin = (Request.IsAuthenticated && User.IsInRole("Admin"));
}

@if (Model.Count() > 0)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                @if (isValidAdmin)
                {
                    <th scope="col">Functions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var c in Model)
            {
                <tr>
                    <th scope="row">@c.Id</th>
                    <td>@c.Name</td>
                    @if (isValidAdmin)
                    {
                        <td>
                            <a href="#" onclick="return openEditForm(@c.Id)">Edit</a> | <a href="#" onclick="return deleteProduct(@c.Id)">Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h2>Database is empty!</h2>
}

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Load", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "data_products" }))